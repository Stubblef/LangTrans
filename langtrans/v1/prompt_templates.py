ANALYSIS_TEMPLATE = """
请仔细阅读给定的会议记录,并从以下维度提取和分析相关信息:
参考维度:
● 宏观经济形势(重要经济指标如GDP、通胀率、失业率、利率、汇率等),经济预测和政策建议等
● 行业发展趋势,行业政策动向，行业风险评估
● 货币政策和财政政策动向， 系统性风险和国家风险评估
● 具体公司或金融产品分析， 公司财务状况和经营表现， 市场份额和竞争力分析， 产品创新和技术发展， 投资价值评估， 公司管理效率和战略规划
● 相关法律法规变化， 监管措施和影响
● 投资者情绪和行为分析， 主要市场参与者的策略和动向， 市场异常现象和潜在风险
● 公司特定风险识别， 信用风险和操作风险分析， 新兴风险和潜在威胁
● 新技术发展和应用， 创新趋势和潜在影响
● 国际经济环境变化， 地缘政治事件及其影响， 全球市场走势和国际竞争态势

请根据会议记录的内容,参考上述维度，选择或者也可以拟定更合适的维度（5-8个），根据原文的内容,对以上维度进行详细分析和总结。
注意:
1. 并非所有维度在每次会议中都会涉及。请关注会议记录中实际讨论的内容,并适当调整分析重点。
2. 在选定维度下分析时，不要再出现子维度及其分析内容。
输出格式
请以JSON格式输出分析结果。以下是输出格式的示例：
{{
  "整体经济状况": "经济呈现稳中向好态势", "金融市场走势": "股市波动加大，债市相对稳定",  "重要经济指标":  "GDP增速": "预计同比增长5.5%", "CPI": "同比上涨2.3%", "失业率": "5.5%，较上季度下降0.2个百分点,政策动向": "货币政策保持稳健，财政政策更加积极",
  "政策和监管环境": "新出台政策《关于促进数字经济发展的指导意见》,有利于数字技术与实体经济深度融合",
  "风险分析": "地缘政治风险上升，全球供应链受到挑战,可能导致原材料价格波动，影响企业生产成本",
  "关键发现": "经济复苏态势良好，但外部不确定性增加",科技创新成为经济增长新动能,数字化转型加速，传统行业面临机遇与挑战",
  "趋势预测": "新能源、人工智能等新兴产业将保持快速增长,消费升级趋势明显，服务业有望加快恢复",
  "建议": "加大科技创新投入，提升产业链水平,关注数字经济发展，加快传统产业数字化转型"防范金融风险，保持宏观政策的连续性和稳定性",
}}

会议记录文本：
```
{meeting_notes}
```
"""


SUMMARY_TEMPLATE = """
目标
对给定的一篇会议记录文本,进行简明扼要的概括性总结:
注： 直接输出文本内容的摘要，不需要其他信息和无关描述。
会议记录文本：
```

{meeting_notes}

```

"""


DATA_EXTRACTED = """
请仔细阅读以下会议记录,并提取出所有关键指标的信息,以json形式呈现。json应包含以下字段:

时间:指标对应的时间点或时间段
核心指标:讨论的关键业务或财务指标名称
趋势数值:对应指标的具体趋势描述或数值

请尽可能提取所有相关信息,确保信息的准确性和完整性。
json示例:
[
  {{
    "时间": "2024H1",
    "核心指标": "GDP累计值",
    "趋势数值": "61.68万亿元"
  }},
  {{
    "时间": "2023全年",
    "指标": "CPI",
    "趋势数值": "同比上涨0.2%"
  }},
  {{
    "时间": "2024年7月",
    "指标": "失业率",
    "趋势数值": "17.1%"
  }},
  {{
    "时间": "2024Q3",
    "指标": "PTA开工率",
    "趋势数值": "63.27% 环比下降1.57%"
  }}
]
请基于会议记录内容,按此格式提取并整理信息。
注： 1.确保不要出现重复项。2. 季度使用Q表示，例如2024Q1,半年的使用H表示，例如2024H1。3. 确保金融行业专有名词的表述是准确的，如果有误需要校正。4. 若时间点或时间段不明确，建议仅标注年份，例如： 2024。
会议时间：{datetime_now}
会议记录：
```
{meeting_notes}

```
"""

import os
from pydantic import BaseModel
from datetime import datetime


# class Templates:
    
  # @property
def analysis_template(meeting_notes):
    return ANALYSIS_TEMPLATE.format(meeting_notes=meeting_notes)
  
# @property
def summary_template(meeting_notes):
    return SUMMARY_TEMPLATE.format(meeting_notes=meeting_notes)
  
# @property
def data_extraction_template(meeting_notes):
    datetime_now = datetime.now().strftime("%Y-%m-%d")
    return DATA_EXTRACTED.format(meeting_notes=meeting_notes, datetime_now=datetime_now)